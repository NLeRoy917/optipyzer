const AboutContent = {
	devBody: "Optipyzer is a multi-species codon optimization engine written in Python by myself (Nathan LeRoy) and Caleigh Roleck at Purdue University as a part of a Bioinformatics course in the Spring of 2019. We realized that such an engine would only be widely accessible if it was packaged as a web application. I took on the task of creating a UI for our code, while Caleigh finished the optimization engine. Without her expertise and incredible hard-work, none of this would be possible. Caleigh is currently pursuing her PhD in Systems, Synthetic, and Physical Biology at Rice University. I am working as a Research Assistant at the Indiana Biosciences Research Institute in Indianapolis, IN.",

	codonUsage1: 'What is codon optimization? Why use it in the first place? In all life, there are 20 translated amino acids which are coded using 61 different nucleotide triplets called "codons". There is not a 1-to-1 ratio of amino acids to codons. That is, multiple codons can be translated into the same amino acid. For example, CTT, CTC, CTG, and CTA all code for the amino acid Leucine. Genetic code is said to be degenerate. Information is lost in tranlsation. With the evolution of modern biology - this degenerate code posed a problem. If I want to take a small peptide, introduce its corresponding DNA code into E. Coli, and express it, which codons do I choose for each amino acid in the peptide? Is it random? This is where codon preference comes in.',

	codonUsage2: 'As it turns out, all organisms have been found to exhibit "codon preference" in their genetic code. When coding for specific amino acids in their proteins, they tend to favor certain codons over others. For example, when coding for Leucine, an organism may use CTT 80% of the time, while using the other 3 codons the other 20% of the time. It highly prefers CTT over the other codons, and thus we must design our gene inserts to reflect this. About 80% of the Leucines in our gene should be coded with CTT.',

	codonUsage3: 'Researchers have studied the genome of many organisms and tabulated these codon preferences. These data are used to conduct this codon optimization. There are many algorithms to implement this. In brief, when an organism is selected we look up its codon usage from a database, then generate a new DNA seqeunce from the original query making sure that the codons in this new sequence reflects the usage and preference reflected in the database.',

	engine1: 'Most codon optimization algorithms are designed to optimize sequences for one single organism. What if we are using multiple expression systems? In this case, it is best to optimize for both organisms. This is exactly what we set out to do with Optipyzer.',

	engine2: 'Our codon optimization engine takes into account the codon preference of both organisms. Furthermore, it allows scientists to weight relative expression in each system. One can select as many organisms as they wish, and they can choose a weighting for each of these organisms. Optipyzer will then look up the codon prefernece data from each of these organisms, and use it to construct a new sequence that reflects a weighted average of the codon usage data found.'
}

export default AboutContent;